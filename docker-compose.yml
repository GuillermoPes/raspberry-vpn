version: '3.8'

services:
  # Portainer - Gestión web de contenedores
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - vpn-network

  # WireGuard Easy - Interfaz web para WireGuard
  wg-easy:
    image: ghcr.io/wg-easy/wg-easy:latest
    container_name: wg-easy
    restart: unless-stopped
    environment:
      - WG_HOST=${SERVERURL}
      - WG_PORT=${SERVERPORT}
      - PASSWORD=${WG_EASY_PASSWORD}
      - WG_DEFAULT_DNS=10.13.13.100 # AdGuard Home IP
      - WG_MTU=1420
      - WG_MARCH=arm64 # O armv7, dependiendo de la RPi
    volumes:
      - ./wg-easy:/etc/wireguard
    ports:
      - "51821:51821/tcp" # Interfaz web
      - "51820:51820/udp" # Puerto de WireGuard (debe coincidir con SERVERPORT)
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      vpn-network:
        ipv4_address: 10.13.13.4 # Nueva IP para wg-easy

  # AdGuard Home - Bloqueo de anuncios y DNS completo
  adguardhome:
    image: adguard/adguardhome:latest
    container_name: adguardhome
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"  # DHCP
      - "68:68/tcp"  # DHCP
      - "68:68/udp"  # DHCP
      - "8080:80/tcp"  # Web interface
      - "8443:443/tcp"  # Web interface HTTPS
      - "3000:3000/tcp"  # Initial setup
    environment:
      - TZ=${TZ:-Europe/Madrid}
    volumes:
      - ./adguardhome/work:/opt/adguardhome/work
      - ./adguardhome/conf:/opt/adguardhome/conf
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      vpn-network:
        ipv4_address: 10.13.13.100

  # Nginx Proxy Manager
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ./nginx-proxy-manager/data:/data
      - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    networks:
      - vpn-network

  # Watchtower - Actualización automática de contenedores
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=${TZ:-Europe/Madrid}
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=${WATCHTOWER_POLL_INTERVAL:-86400}
    networks:
      - vpn-network

volumes:
  portainer_data:

networks:
  vpn-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.13.13.0/24
